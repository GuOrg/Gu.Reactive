<UserControl x:Class="Gu.Reactive.Demo.CommandsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:demo="clr-namespace:Gu.Reactive.Demo"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DataContext="{d:DesignInstance demo:CommandsViewModel}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <CheckBox Grid.Row="0"
                      Grid.Column="0"
                      Content="CanExecute"
                      IsChecked="{Binding CanExecute}" />
            <Button Grid.Row="0"
                    Grid.Column="1"
                    Command="{Binding RaiseCanExecuteCommand}"
                    Content="RaiseCanExecute" />

            <Button Grid.Row="0"
                    Grid.Column="2"
                    Command="{Binding RaiseCanExecuteOnOtherThread}"
                    Content="RaiseCanExecuteOnOtherTrhread" />

            <Button Grid.Row="0"
                    Grid.Column="3"
                    Command="{Binding DelayedToggleCanExecute}"
                    Content="DelayedToggleCanExecute" />
            <TextBlock Grid.Row="1"
                       Grid.Column="0"
                       Text="Executed:" />
            <TextBlock Grid.Row="1"
                       Grid.Column="1"
                       Grid.ColumnSpan="2"
                       Text="{Binding Executed}" />
        </Grid>
        <WrapPanel Grid.Row="1">
            <WrapPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Width" Value="250" />
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Margin" Value="5" />
                </Style>
            </WrapPanel.Resources>
            <Button Command="{Binding ManualRelayCommand}" Content="ManualRelayCommand" />
            <Button Command="{Binding ManualRelayCommandNoCondition}" Content="ManualRelayCommandNoCondition" />
            <Button Command="{Binding ManualRelayCommandWithParameter}"
                    CommandParameter="Value"
                    Content="ManualRelayCommandWithParameter" />

            <Button Command="{Binding RelayCommand}" Content="RelayCommand" />
            <Button Command="{Binding RelayCommandNoCondition}" Content="RelayCommandNoCondition" />
            <Button Command="{Binding RelayCommandWithParamater}"
                    CommandParameter="1"
                    Content="RelayCommandWithParamater" />

            <Button Command="{Binding ObservingRelayCommand}"
                    CommandParameter="1"
                    Content="ObservingRelayCommand" />
            <Button Command="{Binding ObservingRelayCommandWithParameter}"
                    CommandParameter="1"
                    Content="ObservingRelayCommandWithParameter" />

            <Button Command="{Binding ConditionRelayCommand}"
                    CommandParameter="1"
                    Content="ConditionRelayCommand" />
            <Button Command="{Binding ConditionRelayCommandWithParameter}"
                    CommandParameter="1"
                    Content="ConditionRelayCommandWithParameter" />
        </WrapPanel>
    </Grid>
</UserControl>
