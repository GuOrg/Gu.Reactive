<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:local="clr-namespace:Gu.Wpf.Reactive"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:toolTips="clr-namespace:Gu.Wpf.ToolTips;assembly=Gu.Wpf.ToolTips"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Gu.Wpf.Reactive;component/Themes/ConditionControl.xaml" />
        <ResourceDictionary Source="/Gu.Wpf.Reactive;component/Themes/Assets.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="{x:Type local:CommandToolTip}">
        <Setter Property="StaysOpen" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CommandToolTip}">
                    <Border x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.0" Color="{DynamicResource ControlLightColor}" />
                                        <GradientStop Offset="1.0" Color="{DynamicResource ControlMediumColor}" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <Grid Margin="4" d:DataContext="{d:DesignInstance local:ConditionRelayCommand}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       HorizontalAlignment="Left"
                                       Text="{Binding ToolTipText}" />

                            <local:ConditionControl Grid.Row="1"
                                                    HorizontalAlignment="Left"
                                                    Condition="{Binding Condition}" />
                            <ContentPresenter Grid.Row="2"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ConditionTemplate" DataType="{x:Type local:ConditionRelayCommand}">
        <Border Background="Transparent">
            <local:ConditionControl Condition="{Binding Condition}" />
        </Border>
    </DataTemplate>

    <!--  Must have x:Shared="False" or else the same instance of tooltip is used.  -->
    <Style x:Key="ConditionInfoStyle"
           TargetType="{x:Type Button}"
           x:Shared="False">
        <Setter Property="toolTips:TouchToolTipService.IsVisible" Value="False" />
        <Setter Property="toolTips:TouchToolTipService.ToolTip">
            <Setter.Value>
                <local:CommandToolTip />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="toolTips:TouchToolTipService.IsVisible" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ConditionDebugInfoStyle"
           BasedOn="{StaticResource ConditionInfoStyle}"
           TargetType="{x:Type Button}"
           x:Shared="False">
        <Setter Property="ToolTipService.ToolTip">
            <Setter.Value>
                <local:CommandToolTip />
            </Setter.Value>
        </Setter>
        <Setter Property="toolTips:TouchToolTipService.ToolTip">
            <Setter.Value>
                <local:CommandToolTip />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>