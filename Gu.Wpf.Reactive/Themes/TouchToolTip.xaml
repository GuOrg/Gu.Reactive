<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Gu.Wpf.Reactive">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Gu.Wpf.Reactive;component/Themes/Assets.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="{x:Type local:TouchToolTip}">
        <Setter Property="StaysOpen" Value="True" />
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <!--  <Setter Property="Placement" Value="Bottom" />  -->
        <!--  <Setter Property="StaysOpen" Value="True" />  -->
        <!--  <Setter Property="PlacementTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PopupButton}}}" />  -->
    </Style>

    <DataTemplate x:Key="ConditionTemplate" DataType="{x:Type local:ConditionRelayCommand}">
        <Border Background="Transparent">
            <local:ConditionControl Condition="{Binding Condition}" />
        </Border>
    </DataTemplate>

    <Style x:Key="ConditionInfoStyle" TargetType="{x:Type Button}" x:Shared="False">
        <Setter Property="local:TouchToolTipService.IsVisible" Value="False" />
        <Setter Property="local:TouchToolTipService.ToolTip">
            <Setter.Value>
                <local:TouchToolTip>
                    <local:ConditionControl Command="{Binding AdornedElement.Command, RelativeSource={RelativeSource AncestorType={x:Type local:TouchToolTip}}}" />
                </local:TouchToolTip>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="local:TouchToolTipService.IsVisible" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>