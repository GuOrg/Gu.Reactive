<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2230088E-F6DC-4C79-9983-D9654274D689}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Gu.Reactive</RootNamespace>
    <AssemblyName>Gu.Reactive</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>Gu.Reactive.ruleset</CodeAnalysisRuleSet>
    <DocumentationFile>bin\Debug\Gu.Reactive.XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\Gu.Reactive.XML</DocumentationFile>
    <CodeAnalysisRuleSet>Gu.Reactive.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Chunk.cs" />
    <Compile Include="Chunk{T}.cs" />
    <Compile Include="Collections\ReadOnlyViews\Filtered.cs" />
    <Compile Include="Collections\ReadOnlyViews\MappingView.Create.cs" />
    <Compile Include="Collections\ReadOnlyViews\MappingView{TSource,TResult}.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MappingView{TSource,TResult}.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\ReadOnlyViews\Mapping\InstanceMap.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadOnlyFilteredView.Create.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadOnlyFilteredView.FromObservable.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadOnlyFilteredView{T}.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ReadOnlyFilteredView{T}.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\ReadOnlyViews\ReadOnlySerialViewBase.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadOnlyThrottledView.generated.cs">
      <DependentUpon>ReadOnlyThrottledView.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Collections\ReadOnlyViews\Mapping\CreatingRemoving{TSource,TResult}.cs" />
    <Compile Include="Collections\ReadOnlyViews\Mapping\IMapper{TSource,TResult}.cs" />
    <Compile Include="Collections\ReadOnlyViews\Mapping\Mapper.cs" />
    <Compile Include="Collections\ReadOnlyViews\Mapping\CreatingCaching{TSource,TResult}.cs" />
    <Compile Include="Collections\ReadOnlyViews\Mapping\CreatingCachingRemoving{TSource,TResult}.cs" />
    <Compile Include="Collections\ReadOnlyViews\Mapping\RefCounter{T}.cs" />
    <Compile Include="Collections\ReadOnlyViews\Mapping\UpdatingRemoving{TSource,TResult}.cs" />
    <Compile Include="Collections\ReadOnlyViews\Mapping\Creating{TSource,TResult}.cs" />
    <Compile Include="Collections\ReadOnlyViews\Mapping\Updating{TSource,TResult}.cs" />
    <Compile Include="Collections\ScheduledCollection.cs" />
    <Compile Include="Conditions\CollectionCondition.cs" />
    <Compile Include="Conditions\Negated.cs" />
    <Compile Include="Conditions\NullIsFalse.cs" />
    <Compile Include="Conditions\ObservableAndCriteria.cs" />
    <Compile Include="Contracts\IReadOnlyView.cs" />
    <Compile Include="EventArgs\CachedEventArgs.cs" />
    <Compile Include="Collections\CollectionSynchronizer{T}.cs" />
    <Compile Include="Collections\FixedSizedQueue{T}.cs" />
    <Compile Include="Collections\ReadOnlyViews\MappingView{TSource,TResult}.cs" />
    <Compile Include="Collections\ObservableBatchCollection{T}.cs" />
    <Compile Include="Collections\ObservableFixedSizeQueue{T}.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadOnlyFilteredView{T}.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadOnlyIListView{T}.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadOnlySerialView{T}.cs" />
    <Compile Include="Contracts\IConditionsService.cs" />
    <Compile Include="Contracts\IFilteredView{T}.cs" />
    <Compile Include="Contracts\IObservableCollection{T}.cs" />
    <Compile Include="Contracts\IObservableSet.cs" />
    <Compile Include="Collections\ObservableSet{T}.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadonlyIListView.cs" />
    <Compile Include="Internals\Exceptions.cs" />
    <Compile Include="Internals\IdentitySet.cs" />
    <Compile Include="Internals\IdentitySet`1.cs" />
    <Compile Include="Internals\ListExt.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadonlyViewBase{TSource,TMapped}.cs" />
    <Compile Include="Collections\Internals\ThrowHelper.cs" />
    <Compile Include="Conditions\ConditionExt.cs" />
    <Compile Include="Contracts\IReadOnlyFilteredView{T}.cs" />
    <Compile Include="Contracts\IReadOnlyObservableCollection{T}.cs" />
    <Compile Include="Contracts\IReadonlySet{T}.cs" />
    <Compile Include="Contracts\IReadOnlyThrottledView{T}.cs" />
    <Compile Include="Contracts\IRefreshAble.cs" />
    <Compile Include="Contracts\ISatisfied.cs" />
    <Compile Include="Contracts\ISchedulers.cs" />
    <Compile Include="Collections\Internals\CollectionDebugView.cs" />
    <Compile Include="Collections\ReadOnlyViews\MappingView.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MappingView.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\ReadOnlyViews\ReadOnlyFilteredView.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ReadOnlyFilteredView.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\Internals\Diff.cs" />
    <Compile Include="Collections\ReadOnlyViews\ReadOnlyThrottledView{T}.cs" />
    <Compile Include="Conditions\AbstractCondition.cs" />
    <Compile Include="Contracts\IThrottledView{T}.cs" />
    <Compile Include="ForegroundScheduler.cs" />
    <Compile Include="Contracts\IMaybe.cs" />
    <Compile Include="Internals\ConcurrentQueueExt.cs" />
    <Compile Include="Internals\Ensure\Ensure.Collection.cs" />
    <Compile Include="Internals\Ensure\Ensure.Compare.cs" />
    <Compile Include="Internals\Ensure\Ensure.cs" />
    <Compile Include="Contracts\IWpfSchedulers.cs" />
    <Compile Include="Internals\Ensure\Ensure.String.cs" />
    <Compile Include="Internals\Ignore.cs" />
    <Compile Include="Internals\ItemsTracker\ItemsTracker.cs" />
    <Compile Include="Internals\ItemsTracker\ItemsTracker{TCollection,TItem,TProperty}.cs" />
    <Compile Include="Internals\ItemsTracker\NestedItemsTracker{TCollection,TItem,TProperty}.cs" />
    <Compile Include="Internals\ItemsTracker\SimpleItemsTracker{TCollection,TItem,TProperty}.cs" />
    <Compile Include="Internals\ItemsTracker\TrackedItemPropertyChangedEventHandler.cs" />
    <Compile Include="Internals\LazyExt.cs" />
    <Compile Include="Internals\PropertyPath\INotifyingGetter.cs" />
    <Compile Include="Internals\PropertyPath\NotifyingGetter.cs" />
    <Compile Include="Internals\PropertyTracker\IPropertyTracker.cs" />
    <Compile Include="Internals\PropertyTracker\IPropertyPathTracker.cs" />
    <Compile Include="Internals\PropertyPath\NotifyingPath.cs" />
    <Compile Include="Internals\PropertyPath\NotifyingPath{TNotifier,TProperty}.cs" />
    <Compile Include="Internals\PropertyTracker\IPropertyTracker{TValue}.cs" />
    <Compile Include="Internals\PropertyTracker\TrackedPropertyChangedEventHandler.cs" />
    <Compile Include="Internals\SetPool.cs" />
    <Compile Include="Maybe{T}.cs" />
    <Compile Include="Internals\ObjectIdentityComparer{T}.cs" />
    <Compile Include="Reflection\Getter\IdentityGetter.cs" />
    <Compile Include="Reflection\Getter\IGetter.cs" />
    <Compile Include="Reflection\Getter\IGetter{TValue}.cs" />
    <Compile Include="SourceAndValue.cs" />
    <Compile Include="SourceAndValue{TSource,TValue}.cs" />
    <Compile Include="EventArgs\ItemPropertyChangedEventArgs{TItem,TValue}.cs" />
    <Compile Include="NotifyCollectionChangedEventArgs{T}.cs" />
    <Compile Include="EventArgs\NotifyCollectionChangedEventArgsExt.cs" />
    <Compile Include="NotifyCollectionChangedExt.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>NotifyCollectionChangedExt.tt</DependentUpon>
    </Compile>
    <Compile Include="ObservableExt.cs" />
    <Compile Include="EventArgs\PropertyChangedAndValueEventArgs{TProperty}.cs" />
    <Compile Include="Internals\ExpressionExt.cs" />
    <Compile Include="Reflection\Comparers\MemberExpressionComparer.cs" />
    <Compile Include="Reflection\Getter\ClassGetter{TSource,TValue}.cs" />
    <Compile Include="Reflection\Getter\Getter.cs" />
    <Compile Include="Reflection\Getter\Getter{TSource,TValue}.cs" />
    <Compile Include="Reflection\Getter\IGetter{TSource,TValue}.cs" />
    <Compile Include="Reflection\Getter\StructGetter{TSource,TValue}.cs" />
    <Compile Include="Internals\PropertyPath\IPropertyPath.cs" />
    <Compile Include="Maybe.cs" />
    <Compile Include="Internals\RwLock.cs" />
    <Compile Include="Internals\PropertyTracker\PropertyPathTracker.cs" />
    <Compile Include="Internals\PropertyTracker\PropertyTracker.cs" />
    <Compile Include="Reflection\Comparers\PropertyPathComparer.cs" />
    <Compile Include="Internals\PropertyPath\PropertyPath{TSource,TValue}.cs" />
    <Compile Include="NotifyCollectionChangedExt.cs" />
    <Compile Include="NameOf.cs" />
    <Compile Include="Conditions\AndCondition.cs" />
    <Compile Include="Conditions\Internals\AndConditionCollection.cs" />
    <Compile Include="Conditions\Condition.cs" />
    <Compile Include="Conditions\ConditionCollection.cs" />
    <Compile Include="Conditions\ConditionHistoryPoint.cs" />
    <Compile Include="Contracts\ICondition.cs" />
    <Compile Include="Conditions\NegatedCondition.cs" />
    <Compile Include="Conditions\OrCondition.cs" />
    <Compile Include="Conditions\Internals\OrConditionCollection.cs" />
    <Compile Include="Internals\PropertyPath\PropertyPathParser.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="NotifyPropertyChangedExt.cs" />
    <Compile Include="Schedulers.cs" />
    <Compile Include="SerialDisposable{T}.cs" />
    <Compile Include="TaskExt.cs" />
    <Compile Include="Trackers\DoubleAverageTracker.cs" />
    <Compile Include="Trackers\Internals\IChanges.cs" />
    <Compile Include="Trackers\Internals\ITracker{TValue}.cs" />
    <Compile Include="Trackers\Mapper{TSource,TResult}.cs" />
    <Compile Include="Trackers\MinMaxTracker.generated.cs">
      <DependentUpon>MinMaxTracker.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Trackers\MaxTracker.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MaxTracker.tt</DependentUpon>
    </Compile>
    <Compile Include="Trackers\MaxTracker{TValue}.cs" />
    <Compile Include="Trackers\MinMaxTracker{TValue}.cs" />
    <Compile Include="Trackers\MinTracker.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MinTracker.tt</DependentUpon>
    </Compile>
    <Compile Include="Trackers\MinTracker{TValue}.cs" />
    <Compile Include="Trackers\Internals\NestedChanges{TCollection,TItem,TValue}.cs" />
    <Compile Include="Trackers\Internals\SimpleChanges{TCollection,TValue}.cs" />
    <Compile Include="Trackers\Tracker{TValue}.cs" />
    <Compile Include="TypeExt.cs" />
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="..\stylecop.json">
      <Link>stylecop.json</Link>
    </AdditionalFiles>
    <None Include="Collections\ReadOnlyViews\MappingView.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MappingView.generated.cs</LastGenOutput>
    </None>
    <None Include="Collections\ReadOnlyViews\ReadOnlyFilteredView.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ReadOnlyFilteredView.generated.cs</LastGenOutput>
    </None>
    <None Include="Gu.Reactive.ruleset" />
    <None Include="NotifyCollectionChangedExt.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>NotifyCollectionChangedExt.generated.cs</LastGenOutput>
    </None>
    <None Include="paket.references" />
    <None Include="paket.template" />
    <None Include="Trackers\MaxTracker.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MaxTracker.generated.cs</LastGenOutput>
    </None>
    <None Include="Trackers\MinTracker.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MinTracker.generated.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <!--<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'CreateNugetPackage|AnyCPU'">
    <PostBuildEvent>$(SolutionDir).paket\paket.exe "pack" "output" ".\publish"</PostBuildEvent>
  </PropertyGroup>-->
  <ItemGroup>
    <None Include="Collections\ReadOnlyViews\ReadOnlyThrottledView.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ReadOnlyThrottledView.generated.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Collections\ReadOnlyViews\MappingView{TSource,TResult}.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MappingView{TSource,TResult}.generated.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Trackers\MinMaxTracker.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MinMaxTracker.generated.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="Collections\ReadOnlyViews\ReadOnlyFilteredView{T}.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ReadOnlyFilteredView{T}.generated.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <Import Project="..\.paket\paket.targets" />
  <ItemGroup>
    <Analyzer Include="..\packages\analyzers\Gu.Analyzers\analyzers\dotnet\cs\Gu.Analyzers.Analyzers.dll">
      <Paket>True</Paket>
    </Analyzer>
    <Analyzer Include="..\packages\analyzers\Gu.Analyzers\analyzers\dotnet\cs\Gu.Analyzers.CodeFixes.dll">
      <Paket>True</Paket>
    </Analyzer>
  </ItemGroup>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v2.0' Or $(TargetFrameworkVersion) == 'v3.0' Or $(TargetFrameworkVersion) == 'v3.5' Or $(TargetFrameworkVersion) == 'v4.0' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7')">
      <ItemGroup>
        <Reference Include="JetBrains.Annotations">
          <HintPath>..\packages\analyzers\JetBrains.Annotations\lib\net\JetBrains.Annotations.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == 'WindowsPhoneApp') Or ($(TargetFrameworkIdentifier) == '.NETCore' And $(TargetFrameworkVersion) == 'v5.0') Or ($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v1.2' Or $(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4' Or $(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1')) Or ($(TargetFrameworkIdentifier) == 'MonoTouch') Or ($(TargetFrameworkIdentifier) == 'Xamarin.iOS') Or ($(TargetFrameworkIdentifier) == 'Xamarin.Mac') Or ($(TargetFrameworkIdentifier) == 'WindowsPhone' And ($(TargetFrameworkVersion) == 'v8.0' Or $(TargetFrameworkVersion) == 'v8.1'))">
      <ItemGroup>
        <Reference Include="JetBrains.Annotations">
          <HintPath>..\packages\analyzers\JetBrains.Annotations\lib\netstandard1.0\JetBrains.Annotations.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == '.NETCore' And $(TargetFrameworkVersion) == 'v4.5') Or ($(TargetFrameworkIdentifier) == 'WindowsPhone' And ($(TargetFrameworkVersion) == 'v7.0' Or $(TargetFrameworkVersion) == 'v7.1' Or $(TargetFrameworkVersion) == 'v7.5')) Or ($(TargetFrameworkIdentifier) == 'Silverlight' And $(TargetFrameworkVersion) == 'v4.0') Or ($(TargetFrameworkProfile) == 'Profile2') Or ($(TargetFrameworkProfile) == 'Profile3') Or ($(TargetFrameworkProfile) == 'Profile4') Or ($(TargetFrameworkProfile) == 'Profile18') Or ($(TargetFrameworkProfile) == 'Profile23') Or ($(TargetFrameworkProfile) == 'Profile36') Or ($(TargetFrameworkProfile) == 'Profile41') Or ($(TargetFrameworkProfile) == 'Profile46') Or ($(TargetFrameworkProfile) == 'Profile88') Or ($(TargetFrameworkProfile) == 'Profile95') Or ($(TargetFrameworkProfile) == 'Profile96') Or ($(TargetFrameworkProfile) == 'Profile104') Or ($(TargetFrameworkProfile) == 'Profile143') Or ($(TargetFrameworkProfile) == 'Profile154')">
      <ItemGroup>
        <Reference Include="JetBrains.Annotations">
          <HintPath>..\packages\analyzers\JetBrains.Annotations\lib\portable-net4+sl4+wp7+netcore45\JetBrains.Annotations.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == 'MonoAndroid' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v2.2' Or $(TargetFrameworkVersion) == 'v2.3' Or $(TargetFrameworkVersion) == 'v4.0.3' Or $(TargetFrameworkVersion) == 'v4.1' Or $(TargetFrameworkVersion) == 'v4.2' Or $(TargetFrameworkVersion) == 'v4.3' Or $(TargetFrameworkVersion) == 'v4.4' Or $(TargetFrameworkVersion) == 'v4.4W' Or $(TargetFrameworkVersion) == 'v5.0' Or $(TargetFrameworkVersion) == 'v5.1' Or $(TargetFrameworkVersion) == 'v6.0')) Or ($(TargetFrameworkIdentifier) == '.NETCore' And ($(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v5.0')) Or ($(TargetFrameworkIdentifier) == 'Silverlight' And $(TargetFrameworkVersion) == 'v5.0') Or ($(TargetFrameworkProfile) == 'Profile5') Or ($(TargetFrameworkProfile) == 'Profile6') Or ($(TargetFrameworkProfile) == 'Profile7') Or ($(TargetFrameworkProfile) == 'Profile14') Or ($(TargetFrameworkProfile) == 'Profile19') Or ($(TargetFrameworkProfile) == 'Profile24') Or ($(TargetFrameworkProfile) == 'Profile31') Or ($(TargetFrameworkProfile) == 'Profile32') Or ($(TargetFrameworkProfile) == 'Profile37') Or ($(TargetFrameworkProfile) == 'Profile42') Or ($(TargetFrameworkProfile) == 'Profile44') Or ($(TargetFrameworkProfile) == 'Profile47') Or ($(TargetFrameworkProfile) == 'Profile49') Or ($(TargetFrameworkProfile) == 'Profile78') Or ($(TargetFrameworkProfile) == 'Profile84') Or ($(TargetFrameworkProfile) == 'Profile92') Or ($(TargetFrameworkProfile) == 'Profile102') Or ($(TargetFrameworkProfile) == 'Profile111') Or ($(TargetFrameworkProfile) == 'Profile136') Or ($(TargetFrameworkProfile) == 'Profile147') Or ($(TargetFrameworkProfile) == 'Profile151') Or ($(TargetFrameworkProfile) == 'Profile157') Or ($(TargetFrameworkProfile) == 'Profile158') Or ($(TargetFrameworkProfile) == 'Profile225') Or ($(TargetFrameworkProfile) == 'Profile240') Or ($(TargetFrameworkProfile) == 'Profile255') Or ($(TargetFrameworkProfile) == 'Profile259') Or ($(TargetFrameworkProfile) == 'Profile328') Or ($(TargetFrameworkProfile) == 'Profile336') Or ($(TargetFrameworkProfile) == 'Profile344')">
      <ItemGroup>
        <Reference Include="JetBrains.Annotations">
          <HintPath>..\packages\analyzers\JetBrains.Annotations\lib\portable-net4+sl5+netcore45+wpa81+wp8+MonoAndroid1+MonoTouch1\JetBrains.Annotations.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <ItemGroup>
    <Analyzer Include="..\packages\analyzers\StyleCop.Analyzers\analyzers\dotnet\cs\StyleCop.Analyzers.CodeFixes.dll">
      <Paket>True</Paket>
    </Analyzer>
    <Analyzer Include="..\packages\analyzers\StyleCop.Analyzers\analyzers\dotnet\cs\StyleCop.Analyzers.dll">
      <Paket>True</Paket>
    </Analyzer>
  </ItemGroup>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1')">
      <ItemGroup>
        <Reference Include="System.Runtime">
          <HintPath>..\packages\analyzers\System.Runtime\ref\netstandard1.0\System.Runtime.dll</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="System.Runtime">
          <HintPath>..\packages\analyzers\System.Runtime\ref\netstandard1.0\System.Runtime.xml</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETStandard' And $(TargetFrameworkVersion) == 'v1.2'">
      <ItemGroup>
        <Reference Include="System.Runtime">
          <HintPath>..\packages\analyzers\System.Runtime\ref\netstandard1.2\System.Runtime.dll</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="System.Runtime">
          <HintPath>..\packages\analyzers\System.Runtime\ref\netstandard1.2\System.Runtime.xml</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.3' Or $(TargetFrameworkVersion) == 'v1.4')">
      <ItemGroup>
        <Reference Include="System.Runtime">
          <HintPath>..\packages\analyzers\System.Runtime\ref\netstandard1.3\System.Runtime.dll</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="System.Runtime">
          <HintPath>..\packages\analyzers\System.Runtime\ref\netstandard1.3\System.Runtime.xml</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="($(TargetFrameworkIdentifier) == '.NETStandard' And ($(TargetFrameworkVersion) == 'v1.5' Or $(TargetFrameworkVersion) == 'v1.6' Or $(TargetFrameworkVersion) == 'v2.0')) Or ($(TargetFrameworkIdentifier) == '.NETCoreApp' And ($(TargetFrameworkVersion) == 'v1.0' Or $(TargetFrameworkVersion) == 'v1.1' Or $(TargetFrameworkVersion) == 'v2.0'))">
      <ItemGroup>
        <Reference Include="System.Runtime">
          <HintPath>..\packages\analyzers\System.Runtime\ref\netstandard1.5\System.Runtime.dll</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="System.Runtime">
          <HintPath>..\packages\analyzers\System.Runtime\ref\netstandard1.5\System.Runtime.xml</HintPath>
          <Private>False</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <ItemGroup>
    <Analyzer Include="..\packages\analyzers\WpfAnalyzers\analyzers\dotnet\cs\WpfAnalyzers.Analyzers.dll">
      <Paket>True</Paket>
    </Analyzer>
    <Analyzer Include="..\packages\analyzers\WpfAnalyzers\analyzers\dotnet\cs\WpfAnalyzers.CodeFixes.dll">
      <Paket>True</Paket>
    </Analyzer>
  </ItemGroup>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.Core">
          <HintPath>..\packages\System.Reactive.Core\lib\net45\System.Reactive.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7')">
      <ItemGroup>
        <Reference Include="System.Reactive.Core">
          <HintPath>..\packages\System.Reactive.Core\lib\net46\System.Reactive.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7')">
      <ItemGroup>
        <Reference Include="System.Reactive.Interfaces">
          <HintPath>..\packages\System.Reactive.Interfaces\lib\net45\System.Reactive.Interfaces.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.Linq">
          <HintPath>..\packages\System.Reactive.Linq\lib\net45\System.Reactive.Linq.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7')">
      <ItemGroup>
        <Reference Include="System.Reactive.Linq">
          <HintPath>..\packages\System.Reactive.Linq\lib\net46\System.Reactive.Linq.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.PlatformServices">
          <HintPath>..\packages\System.Reactive.PlatformServices\lib\net45\System.Reactive.PlatformServices.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7')">
      <ItemGroup>
        <Reference Include="System.Reactive.PlatformServices">
          <HintPath>..\packages\System.Reactive.PlatformServices\lib\net46\System.Reactive.PlatformServices.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
</Project>