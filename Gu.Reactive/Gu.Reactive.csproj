<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2230088E-F6DC-4C79-9983-D9654274D689}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Gu.Reactive</RootNamespace>
    <AssemblyName>Gu.Reactive</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccAuxPath>SAK</SccAuxPath>
    <SccProvider>SAK</SccProvider>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeContractsEnableRuntimeChecking>False</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
    <CodeAnalysisRuleSet>Gu.Reactive.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeContractsEnableRuntimeChecking>False</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
    <DocumentationFile>bin\Release\Gu.Reactive.XML</DocumentationFile>
    <CodeAnalysisRuleSet>Gu.Reactive.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'CreateNugetPackage|AnyCPU'">
    <OutputPath>bin\CreateNugetPackage\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>Gu.Reactive.ruleset</CodeAnalysisRuleSet>
    <DocumentationFile>bin\CreateNugetPackage\Gu.Reactive.XML</DocumentationFile>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeContractsEnableRuntimeChecking>False</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Collections\EditableListView.cs" />
    <Compile Include="Contracts\IObservableSet.cs" />
    <Compile Include="Collections\ObservableSet.cs" />
    <Compile Include="Collections\ReadonlyIListView.cs" />
    <Compile Include="Collections\ListExt.cs" />
    <Compile Include="Collections\ReadonlySerialViewBase.cs" />
    <Compile Include="Collections\ThrowHelper.cs" />
    <Compile Include="Conditions\ConditionExt.cs" />
    <Compile Include="Contracts\IRefreshAble.cs" />
    <Compile Include="Contracts\ISatisfied.cs" />
    <Compile Include="Contracts\ISchedulers.cs" />
    <Compile Include="Collections\CollectionDebugView.cs" />
    <Compile Include="Collections\FilteredView.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>FilteredView.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\IMappingFactory`2.cs" />
    <Compile Include="Collections\IUpdater.cs" />
    <Compile Include="Collections\MappingCache`2.cs" />
    <Compile Include="Collections\MappingFactory.cs" />
    <Compile Include="Collections\MappingFactory`2.cs" />
    <Compile Include="Collections\MappingView.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MappingView.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\MappingView`2.cs" />
    <Compile Include="Collections\Notifier.cs" />
    <Compile Include="Collections\ReadOnlyFilteredView.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ReadOnlyFilteredView.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\ReadOnlyFilteredView`1.cs" />
    <Compile Include="Collections\ReadonlySerialView`1.cs" />
    <Compile Include="Collections\SynchronizedEditableView`1.cs" />
    <Compile Include="Collections\CollectionSynchronizer`1.cs" />
    <Compile Include="Collections\ThrottledRefresher.cs" />
    <Compile Include="Collections\ThrottledView.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ThrottledView.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\ThrottledView`1.cs" />
    <Compile Include="Collections\Diff.cs" />
    <Compile Include="Collections\FilteredRefresher.cs" />
    <Compile Include="Collections\FilteredView.cs" />
    <Compile Include="Collections\FilteredView`1.cs" />
    <Compile Include="Contracts\IDeferredView`1.cs" />
    <Compile Include="Contracts\IFilteredView`1.cs" />
    <Compile Include="Contracts\IObservableCollection`1.cs" />
    <Compile Include="Contracts\IReadOnlyDeferredView`1.cs" />
    <Compile Include="Contracts\IReadOnlyFilteredView`1.cs" />
    <Compile Include="Contracts\IReadOnlyObservableCollection`1.cs" />
    <Compile Include="Collections\ReadOnlyThrottledView.cs" />
    <Compile Include="Collections\WeakCompositeDisposable.cs" />
    <Compile Include="Conditions\AbstractCondition.cs" />
    <Compile Include="Collections\ReadonlyIListView`1.cs" />
    <Compile Include="Collections\EditableListView`1.cs" />
    <Compile Include="ForegroundScheduler.cs" />
    <Compile Include="Get.cs" />
    <Compile Include="Contracts\IMaybe.cs" />
    <Compile Include="Internals\Ensure.Collection.cs" />
    <Compile Include="Internals\Ensure.Compare.cs" />
    <Compile Include="Internals\Ensure.cs" />
    <Compile Include="Internals\ConstantVisitor.cs" />
    <Compile Include="Contracts\IWpfSchedulers.cs" />
    <Compile Include="Internals\Ensure.Singleton.cs" />
    <Compile Include="Internals\Ensure.String.cs" />
    <Compile Include="NotifyCollectionChangedEventArgs.cs" />
    <Compile Include="NotifyCollectionChangedEventArgsExt.cs" />
    <Compile Include="NotifyCollectionChangedExt.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>NotifyCollectionChangedExt.tt</DependentUpon>
    </Compile>
    <Compile Include="ObservableExt.cs" />
    <Compile Include="Collections\ObservableFixedSizeQueue`1.cs" />
    <Compile Include="PropertyPathStuff\IPropertyPath.cs" />
    <Compile Include="Internals\MaybeExt.cs" />
    <Compile Include="Internals\ObjectIdentityComparer`1.cs" />
    <Compile Include="PropertyPathStuff\PropertyPath`1.cs" />
    <Compile Include="Internals\RwLock.cs" />
    <Compile Include="PropertyPathStuff\INotifyingPathItem.cs" />
    <Compile Include="Contracts\IValuePath`2.cs" />
    <Compile Include="PropertyPathStuff\NotifyingPath.cs" />
    <Compile Include="PropertyPathStuff\NotifyingPathItem.cs" />
    <Compile Include="PropertyPathStuff\RootItem.cs" />
    <Compile Include="PropertyPathStuff\PropertyPath`2.cs" />
    <Compile Include="Internals\Maybe`1.cs" />
    <Compile Include="Internals\ItemsObservable`2.cs" />
    <Compile Include="Internals\ValueAndSender`1.cs" />
    <Compile Include="NotifyCollectionChangedExt.cs" />
    <Compile Include="Contracts\IConditionService.cs" />
    <Compile Include="NameOf.cs" />
    <Compile Include="Conditions\AndCondition.cs" />
    <Compile Include="Conditions\AndConditionCollection.cs" />
    <Compile Include="Conditions\Condition.cs" />
    <Compile Include="Conditions\ConditionCollection.cs" />
    <Compile Include="Conditions\ConditionHistoryPoint.cs" />
    <Compile Include="Contracts\ICondition.cs" />
    <Compile Include="Conditions\NegatedCondition.cs" />
    <Compile Include="Conditions\OrCondition.cs" />
    <Compile Include="Conditions\OrConditionCollection.cs" />
    <Compile Include="Collections\FixedSizedQueue`1.cs" />
    <Compile Include="PropertyPathStuff\PropertyPath.cs" />
    <Compile Include="PropertyPathStuff\PathProperty.cs" />
    <Compile Include="PropertyPathStuff\PropertyPathObservable.cs" />
    <Compile Include="PropertyChangedAndValueEventArgs`1.cs" />
    <Compile Include="PropertyPathStuff\PropertyPathVisitor.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ItemPropertyChangedEventArgs`2.cs" />
    <Compile Include="NotifyPropertyChangedExt.cs" />
    <Compile Include="Schedulers.cs" />
    <Compile Include="TaskExt.cs" />
    <Compile Include="Internals\CollectionItemsObservable`2.cs" />
    <Compile Include="Trackers\DoubleAverageTracker.cs" />
    <Compile Include="Trackers\ITracker`1.cs" />
    <Compile Include="Trackers\Mapper`2.cs" />
    <Compile Include="Trackers\MaxTracker.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MaxTracker.tt</DependentUpon>
    </Compile>
    <Compile Include="Trackers\MaxTracker`2.cs" />
    <Compile Include="Trackers\MinTracker.cs" />
    <Compile Include="Trackers\MinTracker.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MinTracker.tt</DependentUpon>
    </Compile>
    <Compile Include="Trackers\MinTracker`2.cs" />
    <Compile Include="Trackers\Tracker`2.cs" />
    <Compile Include="TypeExt.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Collections\ThrottledView.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ThrottledView.generated.cs</LastGenOutput>
    </None>
    <None Include="Collections\FilteredView.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FilteredView.generated.cs</LastGenOutput>
    </None>
    <None Include="Collections\MappingView.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MappingView.generated.cs</LastGenOutput>
    </None>
    <None Include="Collections\ReadOnlyFilteredView.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ReadOnlyFilteredView.generated.cs</LastGenOutput>
    </None>
    <None Include="Gu.Reactive.ruleset" />
    <None Include="NotifyCollectionChangedExt.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>NotifyCollectionChangedExt.generated.cs</LastGenOutput>
    </None>
    <None Include="paket.references" />
    <None Include="paket.template" />
    <None Include="Trackers\MaxTracker.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MaxTracker.generated.cs</LastGenOutput>
    </None>
    <None Include="Trackers\MinTracker.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MinTracker.generated.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <!--<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'CreateNugetPackage|AnyCPU'">
    <PostBuildEvent>$(SolutionDir).paket\paket.exe "pack" "output" ".\publish"</PostBuildEvent>
  </PropertyGroup>-->
  <Import Project="..\.paket\paket.targets" />
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3')">
      <ItemGroup>
        <Reference Include="JetBrains.Annotations">
          <HintPath>..\packages\JetBrains.Annotations\lib\net\JetBrains.Annotations.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <ItemGroup>
    <Analyzer Include="..\packages\StyleCop.Analyzers\analyzers\dotnet\cs\Newtonsoft.Json.dll">
      <Paket>True</Paket>
    </Analyzer>
    <Analyzer Include="..\packages\StyleCop.Analyzers\analyzers\dotnet\cs\StyleCop.Analyzers.CodeFixes.dll">
      <Paket>True</Paket>
    </Analyzer>
    <Analyzer Include="..\packages\StyleCop.Analyzers\analyzers\dotnet\cs\StyleCop.Analyzers.dll">
      <Paket>True</Paket>
    </Analyzer>
  </ItemGroup>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.Core">
          <HintPath>..\packages\System.Reactive.Core\lib\net45\System.Reactive.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.Core">
          <HintPath>..\packages\System.Reactive.Core\lib\net46\System.Reactive.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3' Or $(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.Interfaces">
          <HintPath>..\packages\System.Reactive.Interfaces\lib\net45\System.Reactive.Interfaces.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.Linq">
          <HintPath>..\packages\System.Reactive.Linq\lib\net45\System.Reactive.Linq.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.Linq">
          <HintPath>..\packages\System.Reactive.Linq\lib\net46\System.Reactive.Linq.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.5' Or $(TargetFrameworkVersion) == 'v4.5.1' Or $(TargetFrameworkVersion) == 'v4.5.2' Or $(TargetFrameworkVersion) == 'v4.5.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.PlatformServices">
          <HintPath>..\packages\System.Reactive.PlatformServices\lib\net45\System.Reactive.PlatformServices.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3')">
      <ItemGroup>
        <Reference Include="System.Reactive.PlatformServices">
          <HintPath>..\packages\System.Reactive.PlatformServices\lib\net46\System.Reactive.PlatformServices.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
</Project>